# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

# User specific aliases and functions
if [ -d ~/.bashrc.d ]; then
	for rc in ~/.bashrc.d/*; do
		if [ -f "$rc" ]; then
			. "$rc"
		fi
	done
fi

unset rc

export MICRO_TRUECOLOR=1
export EDITOR=/usr/bin/micro

source ~/.local/share/blesh/ble.sh
source ~/.fzf.bash
source ~/.blerc.sh
ble-import -d integration/fzf-completion
ble-import -d integration/fzf-key-bindings

eval "$(starship init bash)"

alias dir='dir --color=always --group-directories-first -p --quoting-style=shell-escape'
alias ls='ls --color=auto --group-directories-first -p -A'
alias grep='grep --color=auto'
alias rm="echo WRONG removal of "

function cd () {
	clear
    new_directory="$*";
    if [ $# -eq 0 ]; then 
        new_directory=${HOME};
    fi;
    builtin cd "${new_directory}" && dir
}
function open () {
	for arg
	do xdg-open "$arg"
	done
}

alias rc="micro ~/.bashrc && source ~/.bashrc"
alias bc="micro ~/.blerc.sh && source ~/.bashrc"
alias mc="cd ~/.config/micro/bindings.json"

alias ms="cd ~/.config/micro/settings.json"
alias mh="cd ~/Programs/micro-source/runtime/help"

alias vc="micro ~/.config/vivaldi-css/tweaks.css"
alias dc="micro ~/.config/.dircolors && source ~/.bashrc"


alias dt="cd /var/media/Data/"
alias dw="cd ~/Downloads" 

alias extensions="cd ~/.local/share/gnome-shell/extensions"
alias blesh="cd ~/.local/share/blesh/"
alias apps="cd ~/.local/share/applications"

alias pptx-pdf="soffice --headless --convert-to pdf $1"

alias m="micro $1"
alias f="micro $1"
alias h="cd ~"
alias b="cd -"
alias a="cd .."
alias d="dir"
alias l="clear && ls"
alias c="clear && dir"
alias x="open"
alias k="open"
alias j="cd"
alias n="nnn"
alias g="pwd | xsel -bi"
alias s='sudo $(history -p \!-2)'
alias p="cd ~/Programs"

function ble/widget/atimeofday/copy {
  ble/widget/copy-region-or copy-backward-uword
  ble/util/put "${_ble_edit_kill_ring[0]}" | xsel -bi
}
ble-bind -f 'C-c' 'atimeofday/copy'

function ble/widget/atimeofday/enter {

	ble/widget/kill-line
	input="${_ble_edit_kill_ring[0]}"
	first=${input%% *}

	case $(type -t $first) in
	'alias' | 'keyword' | 'function' | 'builtin' | 'file') 
		ble/widget/insert-string $input
		;;
  	*) 
		ble/widget/insert-string 'j '$input
		ble/widget/complete
		;;
	esac

	ble/widget/accept-line
}
ble-bind -f ';' 'atimeofday/enter'

function ble/widget/atimeofday/semicolon {
	ble/widget/self-insert
}
ble-bind -f 'M-;' 'atimeofday/semicolon'

function ble/widget/atimeofday/colon {
	ble/widget/insert-string ':'
}
ble-bind -f 'M-:' 'atimeofday/colon'

function ble/widget/atimeofday/tilda {
	ble/widget/insert-string '~'
}
ble-bind -f ':' 'atimeofday/help-grep'

function ble/widget/atimeofday/help-grep {
	ble/widget/insert-string " --help | grep ''"
	ble/widget/backward-char
}
ble-bind -f 'C-g' 'atimeofday/help-grep'


ble-bind -f 'delete'    'delete-region-or delete-forward-char'
ble-bind -f 'C-delete'  'delete-region-or delete-forward-eword'
ble-bind -f 'C-h'       'delete-region-or delete-backward-eword'

ble-bind -f 'C-x'       'kill-region-or kill-eword'
ble-bind -f 'C-k'       'kill-line'

ble-bind -f 'right'     '@nomarked forward-eword'
ble-bind -f 'left'      '@nomarked backward-eword'
ble-bind -f 'C-right'   '@nomarked forward-char'
ble-bind -f 'C-left'    '@nomarked backward-char'

ble-bind -f 'S-right'   '@marked forward-eword'
ble-bind -f 'S-left'    '@marked backward-eword'

ble-bind -f 'C-z'       'emacs/undo'
ble-bind -f 'C-r'       'emacs/revert'
ble-bind -f 'C-y'       'emacs/redo'

ble-bind -f 'S-C-right' '@marked forward-char'
ble-bind -f 'S-C-left'  '@marked backward-char'

ble-bind -f 'RET'       'accept-line'
ble-bind -f 'M-RET'     'newline'

alias backups="cd /var/media/Data/Data/Backups/Configs/"
function bu {
	dateFolder=$(date +%m-%d-%y)
	cd '/var/media/Data/Data/Backups/Configs/'
	mkdir $dateFolder
 	cp -r ~ $dateFolder
}

